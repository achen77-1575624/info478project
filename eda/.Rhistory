covid_race_combine <- read.csv("./data/covid-county-by-race.csv",
stringsAsFactors = FALSE) %>%
select(-c(deaths, deathsPer100k)) %>%
rename("region" = "state", "subregion" = "countyName") %>%
mutate(across(region, tolower)) %>%
mutate(across(subregion, tolower)) %>%
rename("total pop" = total)
covid_race_combine <- transform(covid_race_combine, County = sub(' city and borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, County = sub(' city', '', subregion))
covid_race_combine <- transform(covid_race_combine, County = sub(' county', '', subregion))
covid_race_combine <- transform(covid_race_combine, County = sub(' borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, County = sub(' census area', '', subregion))
covid_race_combine <- transform(covid_race_combine, County = sub(' municipality', '', subregion))
View(covid_race_combine)
# https://covidtracking.com/race
covid_race_combine <- read.csv("./data/covid-county-by-race.csv",
stringsAsFactors = FALSE) %>%
select(-c(deaths, deathsPer100k)) %>%
rename("region" = "state", "subregion" = "countyName") %>%
mutate(across(region, tolower)) %>%
mutate(across(subregion, tolower)) %>%
rename("total pop" = total)
covid_race_combine <- transform(covid_race_combine, subregion = sub(' city and borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' city', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' county', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' census area', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' municipality', '', subregion))
View(covid_race_combine)
county_table <- as.data.table(merge(county_table, covid_race_combine,  by = c("region","subregion"), all.x = TRUE, all.y = FALSE))
View(county_table)
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_point()
covid_race_scatter
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram()
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram()
covid_race_scatter
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat-"identity")
urbanicity_deaths_percentage_scatter
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity")
covid_race_scatter
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram()
covid_race_scatter
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
filter(!is.na(covid_death_percentage)) +
geom_histogram(stat="identity")
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
filter(!is.na(covid_death_percentage)) +
geom_histogram(stat="identity")
county_table <- as.data.table(merge(county_table, covid_race_combine,  by = c("region","subregion"), all.x = TRUE, all.y = FALSE))
# https://data.cdc.gov/NCHS/Provisional-COVID-19-Death-Counts-in-the-United-St/kn79-hsxy
covid_deaths <- read.csv("./data/covid_death_county.csv",
stringsAsFactors = FALSE) %>%
rename(County = County.name) %>%
mutate(across(County, tolower)) %>%
mutate(County = trimws(County)) %>%
select(!c("Date.as.of", "Start.Date", "End.Date", "Footnote"))
aqi_county <- read.csv("./data/annual_aqi_by_county_2021.csv",
stringsAsFactors = FALSE) %>%
mutate(across(County, tolower)) %>%
mutate(State = state.abb[match(State,state.name)]) %>%
filter(!is.na(State))
# https://www.ers.usda.gov/data-products/county-level-data-sets
income_2019 <- read.csv("./data/unemployment_2019.csv",
stringsAsFactors = FALSE) %>%
select(c("FIPS_Code", "State", "Area_name", "Employed_2019", "Unemployed_2019", "Unemployment_rate_2019", "Employed_2020", "Unemployed_2020", "Unemployment_rate_2020", "Median_Household_Income_2019")) %>%
filter(FIPS_Code != 0) %>%
filter(FIPS_Code %% 1000 != 0) %>%
rename(County = Area_name) %>%
mutate(across(County, tolower)) %>%
rename(FIPS.County.Code = FIPS_Code)
income_2019$County <- gsub("(.*),.*", "\\1", income_2019$County)
covid_deaths_income <- as.data.table(merge(covid_deaths, income_2019,  by = c("FIPS.County.Code", "State", "County"), all.x = TRUE,all.y=TRUE))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' city and borough', '', County))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' city', '', County))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' county', '', County))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' borough', '', County))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' census area', '', County))
covid_deaths_income <- transform(covid_deaths_income, County = sub(' municipality', '', County))
deaths_income_aqi <- as.data.table(merge(covid_deaths_income, aqi_county,  by = c("State","County"), all.x = TRUE, all.y=TRUE)) %>%
filter(!is.na(FIPS.County.Code)) %>%
rename("region" = "State", "subregion" = "County") %>%
mutate(covid_death_percentage = round(Deaths.involving.COVID.19 / Deaths.from.All.Causes, 2))
deaths_income_aqi$region <- state.name[match(deaths_income_aqi$region,state.abb)]
deaths_income_aqi$region <- tolower(deaths_income_aqi$region)
urbanicity_deaths_plot <- ggplot(deaths_income_aqi, aes(x = Urban.Rural.Code, y = Deaths.involving.COVID.19)) +
geom_bar(stat="identity", fill = "#A897F9") +
scale_y_continuous(name="Deaths Involving COVID 19", labels = comma) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
labs(title = "Deaths Involving COVID in Different Urbanicity Levels", x = "Levels of Urbanicity")
us_counties <- map_data("county")
source("C:/Users/stlp/Downloads/adhoc/prep_data.R", echo=TRUE)
urbanicity_deaths_plot <- ggplot(deaths_income_aqi, aes(x = Urban.Rural.Code, y = Deaths.involving.COVID.19)) +
geom_bar(stat="identity", fill = "#A897F9") +
scale_y_continuous(name="Deaths Involving COVID 19", labels = comma) +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
labs(title = "Deaths Involving COVID in Different Urbanicity Levels", x = "Levels of Urbanicity")
us_counties <- map_data("county")
county_table <- as.data.table(merge(deaths_income_aqi, us_counties,  by = c("region","subregion"), all.x = TRUE, all.y=TRUE))
aqi_county_map <- county_table %>%
ggplot(aes(x=long,y=lat,group=group, fill=Median.AQI)) +
geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 45, lat1 = 55) +
scale_fill_continuous(type = "viridis")+
theme(legend.position="bottom",
axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank())
covid_deaths_county_map <- county_table %>%
ggplot(aes(x=long,y=lat,group=group, fill=Deaths.involving.COVID.19)) +
geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 45, lat1 = 55) +
scale_fill_continuous(type = "viridis")+
theme(legend.position="bottom",
axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank())
covid_deaths_top_table <- county_table %>%
select(region, subregion, Deaths.involving.COVID.19) %>%
distinct(.keep_all = TRUE) %>%
arrange(-Deaths.involving.COVID.19) %>%
top_n(20)
covid_deaths_percentage_county_map <- county_table %>%
ggplot(aes(x=long,y=lat,group=group, fill=covid_death_percentage)) +
geom_polygon(color = "gray90", size = 0.1) +
coord_map(projection = "albers", lat0 = 45, lat1 = 55) +
scale_fill_continuous(type = "viridis")+
theme(legend.position="bottom",
axis.line=element_blank(),
axis.text=element_blank(),
axis.ticks=element_blank(),
axis.title=element_blank(),
panel.background=element_blank(),
panel.border=element_blank(),
panel.grid=element_blank())
covid_deaths_percentage_top_table <- county_table %>%
select(region, subregion, covid_death_percentage) %>%
distinct(.keep_all = TRUE) %>%
arrange(-covid_death_percentage) %>%
top_n(20)
urbanicity_deaths_percentage_plot <- deaths_income_aqi %>%
filter(!is.na(covid_death_percentage)) %>%
group_by(Urban.Rural.Code) %>%
summarize(mean.death.percentage = (mean(covid_death_percentage) * 100)) %>%
ggplot(mapping = aes(x = Urban.Rural.Code, y = mean.death.percentage)) +
geom_bar(stat="identity", fill = "#A897F9") +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
labs(title = "Percentage of Total Deaths involving COVID 19 in Different Urbanicity Levels", x = "Levels of Urbanicity")
urbanicity_unemployment_2020_plot <- deaths_income_aqi %>%
filter(!is.na(Unemployment_rate_2020)) %>%
group_by(Urban.Rural.Code) %>%
summarize(mean.unemployment.rate.2020 = (mean(Unemployment_rate_2020) * 100)) %>%
ggplot(mapping = aes(x = Urban.Rural.Code, y = mean.unemployment.rate.2020)) +
geom_bar(stat="identity", fill = "#A897F9") +
scale_x_discrete(guide = guide_axis(n.dodge=3)) +
labs(title = "Unemployment Rate in 2020 in Different Urbanicity Levels", x = "Levels of Urbanicity")
urbanicity_deaths_percentage_scatter <- deaths_income_aqi %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_point()
# https://covidtracking.com/race
covid_race_combine <- read.csv("./data/covid-county-by-race.csv",
stringsAsFactors = FALSE) %>%
select(-c(deaths, deathsPer100k)) %>%
rename("region" = "state", "subregion" = "countyName") %>%
mutate(across(region, tolower)) %>%
mutate(across(subregion, tolower)) %>%
rename("total pop" = total)
covid_race_combine <- transform(covid_race_combine, subregion = sub(' city and borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' city', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' county', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' borough', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' census area', '', subregion))
covid_race_combine <- transform(covid_race_combine, subregion = sub(' municipality', '', subregion))
county_table <- as.data.table(merge(county_table, covid_race_combine,  by = c("region","subregion"), all.x = TRUE, all.y = FALSE))
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
filter(!is.na(covid_death_percentage)) +
geom_histogram(stat="identity")
covid_race_scatter <- ggplot(county_table, mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
filter(!is.na(county_table$covid_death_percentage)) +
geom_histogram(stat="identity")
covid_race_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) +
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity")
urbanicity_deaths_percentage_scatter <- deaths_income_aqi %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_point()
urbanicity_deaths_percentage_scatter <- deaths_income_aqi %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_histogram(stat="identity")
urbanicity_deaths_percentage_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_histogram(stat="identity")
covid_race_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) +
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity")
covid_race_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity")
urbanicity_deaths_percentage_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_histogram(stat="identity")
covid_race_scatter
urbanicity_deaths_percentage_scatter
covid_race_scatter
covid_race_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity") +
labs(title = "Unemployment Rate in 2020 vs the Percentage of All Deaths Involving COVID based on Race", x = "Unemployment Rate in 2020", y = "Percentage of All Deaths Involving COVID", key = "Most Prominent Race per County")
covid_race_scatter
covid_race_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = largestRace1)) +
geom_histogram(stat="identity") +
labs(title = "Unemployment Rate in 2020 vs the Percentage of All Deaths Involving COVID Based on Race", x = "Unemployment Rate in 2020", y = "Percentage of All Deaths Involving COVID", color = "Most Prominent Race per County")
covid_race_scatter
urbanicity_deaths_percentage_scatter <- county_table %>%
filter(!is.na(covid_death_percentage)) %>%
ggplot(mapping = aes(x = Unemployment_rate_2020, y = covid_death_percentage, color = Urban.Rural.Code)) +
geom_histogram(stat="identity") +
labs(title = "Unemployment Rate in 2020 vs the Percentage of All Deaths Involving COVID Based on Urbanicity", x = "Unemployment Rate in 2020", y = "Percentage of All Deaths Involving COVID", color = "Urbanicity Category of each County")
urbanicity_deaths_percentage_scatter
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE)
View(deaths_pre_covid)
deaths_covid <- read.csv("./data/deaths.csv",
stringsAsFactors = FALSE)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE)
View(deaths_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, "Intentional Self-Harm (Suicide)")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.)
View(deaths_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.)
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide., "All Cause" = All.Cause) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide., "All Cause" = All.Cause) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_pre_covid)
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE)
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("All Cause" = All.Cause, "Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.) %>%
rename("All Cause" = All.Cause) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_pre_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_covid)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
rename("Intentional Self Harm (Suicide)" = Intentional.Self.Harm..Suicide.) %>%
select(Year, Month, All.Cause, "Intentional Self Harm (Suicide)")
View(deaths_pre_covid)
deaths_pre_post_covid <- merge(deaths_pre_covid, deaths_covid)
View(deaths_pre_post_covid)
deaths_pre_post_covid <- rbind(deaths_pre_covid, deaths_covid)
View(deaths_pre_post_covid)
View(deaths_covid)
View(deaths_pre_post_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$month), "%Y %m")
install.packages(zoo)
install.packages("zoo")
library(zoo)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$month), "%Y %m")
View(deaths_pre_post_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$Month), "%Y %m")
View(deaths_pre_post_covid)
suicide_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = "Intentional Self Harm (Suicide)", group = 1)) +
geom_line() +
geom_point()
suicide_plot
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.)
# Combines both Deaths dataframes into one.
deaths_pre_post_covid <- rbind(deaths_pre_covid, deaths_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$Month), "%Y %m")
suicide_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = Intentional.Self.Harm..Suicide., group = 1)) +
geom_line() +
geom_point()
suicide_plot
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate("Suicide % of Total Deaths" = Intentional.Self.Harm..Suicide. / All.Cause)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate("Suicide % of Total Deaths" = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
# Combines both Deaths dataframes into one.
deaths_pre_post_covid <- rbind(deaths_pre_covid, deaths_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$Month), "%Y %m")
View(deaths_pre_post_covid)
suicide_percent_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = suicide_percent_total_deaths, group = 1)) +
geom_line() +
geom_point()
suicide_percent_plot
knitr::opts_chunk$set(echo = TRUE)
source(../analysis.r)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
source(../analysis.r)
source("../analysis.r")
source("./analysis.r")
source("../analysis.r")
source("../analysis.r")
summary(cars)
source("../analysis.r")
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
source("../analysis.r")
source("../analysis.r")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
source("../analysis.r")
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
## Combines both Deaths dataframes into one.
deaths_pre_post_covid <- rbind(deaths_pre_covid, deaths_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$Month), "%Y %m")
## Rates of suicide seem to be going up due to higher numbers
suicide_death_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = Intentional.Self.Harm..Suicide., group = 1)) +
geom_line() +
geom_point()
## But if you plot the percent of total deaths from suicide, you can see a large drop in suicide rates! Could this be from higher telehealth usage?
suicide_percent_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = suicide_percent_total_deaths, group = 1)) +
geom_line() +
geom_point()
source("../analysis.r")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE)
View(deaths_pre_covid)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
View(deaths_pre_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
View(deaths_covid)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
## Combines both Deaths dataframes into one.
deaths_pre_post_covid <- rbind(deaths_pre_covid, deaths_covid)
deaths_pre_post_covid$Date <- as.yearmon(paste(deaths_pre_post_covid$Year, deaths_pre_post_covid$Month), "%Y %m")
View(deaths_pre_covid)
## Rates of suicide seem to be going up due to higher numbers
suicide_death_plot <- ggplot(deaths_pre_post_covid, aes(x = Date, y = Intentional.Self.Harm..Suicide., group = 1)) +
geom_line() +
geom_point()
suicide_death_plot
suicide_percent_plot
suicide_death_plot
suicide_percent_plot
suicide_death_plot
test <- read.csv("./data/mental_care.csv"),
stringsAsFactors = FALSE)
test <- read.csv("./data/mental_care.csv",
stringsAsFactors = FALSE)
View(test)
source("../analysis.r")
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
source("/analysis.r")
source("/../analysis.r")
source("/../analysis.r")
source("C:/Users/stlp/Downloads/R Assignments/info478project/eda/analysis.r")
source("C:\Users\stlp\Downloads\R Assignments\info478project\data\analysis.r")
mental_healthcare <- read.csv("./data/mental_care.csv",
stringsAsFactors = FALSE)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
mental_healthcare <- read.csv("./data/mental_care.csv",
stringsAsFactors = FALSE)
View(mental_healthcare)
source("..data/analysis.r")
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
source("..data/analysis.r")
source("../data/analysis.r")
getwd()
source("./../data/analysis.r")
source("../data/analysis.r")
source("../data/analysis.r")
source("../analysis.r")
source("./../analysis.r")
source("../analysis.r")
deaths_pre_covid <- read.csv("/data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
deaths_pre_covid <- read.csv("/data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
knitr::opts_chunk$set(echo = TRUE)
source("../analysis.r")
getwd()
source("./analysis.r")
source("../analysis.r")
source("./analysis.r")
setwd("C:/Users/stlp/Downloads/R Assignments/info478project")
deaths_pre_covid <- read.csv("../data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_pre_covid <- read.csv("./../data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_pre_covid <- read.csv("../data/deaths_pre_covid.csv/",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
deaths_pre_covid <- read.csv("./data/deaths_pre_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
deaths_covid <- read.csv("./data/deaths_covid.csv",
stringsAsFactors = FALSE) %>%
select(Year, Month, All.Cause, Intentional.Self.Harm..Suicide.) %>%
mutate(suicide_percent_total_deaths = (Intentional.Self.Harm..Suicide. / All.Cause) * 100)
setwd("C:/Users/stlp/Downloads/R Assignments/info478project/eda")
